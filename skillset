1.Computer Science 
技術の取得方法
 業務の中で発生したエラーについて、自力で調べられる。

 英語のドキュメントやブログ記事、Q&Aサイトを読むことができる。

Linux
 CUI経由でSSHログインやファイル操作、パッケージやユーザー管理などの基本操作ができる。

 必要に応じて、シェルスクリプトを使って作業を自動化したり、定期実行したりできる

Git
 自分が行うコミットに対して、必要な差分を行単位、コードブロック単位で調整できる。

 reset, rebase, revertなど、コミット改変系の操作を知っており、リポジトリで事故が起きた時に適切に対処できる。

 GitFlow or GithubFlowについて理解しており、プロジェクトに応じた必要なブランチ戦略を提案できる

IPA 基本情報処理技術者試験を取得または同等の知識がある



2.Backend
コンパイラ言語(Java, C#, Golangなど)、スクリプト言語(PHP,Ruby,Python)を最低限１つずつは使える。

MVCフレームワークについて精通しており、Webアプリケーションに頻出する機能について、適切に設計、実装できる

アプリケーションレイヤーの実行パフォーマンスに関して、数十秒〜数分かかるレベルの処理やメモリ展開量が多くなる可能性がある場合に、適切にチューニングができる


3.Database　

 RDBの初期設定(ユーザー管理や設定ファイルとか)ができる

 処理実装に必要なDBクエリについて、ORMとの連携を前提として、SQL構文レベルでも理解している。

 正規化やパフォーマンスを意識して、数十〜数百table位のデータベース設計ができる

 データベース内部でのパフォーマンスチューニングや、Indexを用いた高速化ができる

 インフラレベルでのパフォーマンスチューニングについて、代表的な手法についての知識があり、必要に応じて導入できる


4.Infrastructure

 dockerを使って、プロジェクトに必要な仮想環境を１から構築し、チームで共有できる。

 クラウドインスタンス上で、Webサーバーを立ち上げるための手順書を作ることができる

 本番/ステージング、開発環境のそれぞれの運用方針を定め、開発フェーズやフローに応じて各環境を運用・保守できる

 AWS or GCPを使って、システム開発に必要な構成を計画し、実際に構築することができる。(以下筆者がほとんどAWSなのでAWS主体で書きます

 CIツールを用いて、環境構築や最新コードのデプロイが自動化できる



5.Frontend
HTML/CSSについて精通し、画面デザインやUI/UXについて、デザイナーと必要な実装の連携ができる。

SEOおよびkeywordやOGPなどのメタ情報についての基礎知識を持ち、必要に応じて方針などをプロダクトオーナーや専門ポジの人と相談しながらサービスを運用できる

生JavaScriptおよびjQueryについての理解

npmを用いてパッケージ管理や、ビルドやトランスパイル環境、ビルトインサーバーなどのJS開発環境を構築できる

フルスタックフレームワーク(React or Vue or Angular)について、最低1つは使用できる


6.Security

代表的な攻撃手法（XSS、SQLインジェクション、CORFなど）についての知識があり、定期的に情報を収集している

サービスのインフラ構成全体に対して、セキュリティ方針と具体的な対応方針を計画し、運用することができる

企業に求められる個人情報保護やプライバシーポリシーについて理解し、システム上のデータの取り扱いについて関係部署と適切に連携し、システムに反映できる。

システムの可用性について理解し、プロジェクトの保守運用方針やトラブル対応について、適切に要件を定め、運用することができる。








